name: Build Boost for Android (bionic, arm64-v8a, ananbox compatible)

on:
  workflow_dispatch:
  push:
    branches: [main]

jobs:
  build-boost-android-arm64:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Install dependencies (host tools)
        run: |
          sudo apt-get update
          sudo apt-get install -y wget bzip2 tar build-essential ninja-build unzip

      - name: Download and extract Android NDK (r26c)
        run: |
          wget https://dl.google.com/android/repository/android-ndk-r26c-linux.zip -O ndk.zip
          unzip -q ndk.zip
          mv android-ndk-r26c $HOME/android-ndk

      - name: Set up Android NDK environment
        run: |
          echo "ANDROID_NDK_HOME=$HOME/android-ndk" >> $GITHUB_ENV
          echo "PATH=$HOME/android-ndk/toolchains/llvm/prebuilt/linux-x86_64/bin:$PATH" >> $GITHUB_ENV

      - name: Download Boost source
        run: |
          wget -nv https://sourceforge.net/projects/boost/files/boost/1.83.0/boost_1_83_0.tar.bz2/download -O boost_1_83_0.tar.bz2
          tar -xf boost_1_83_0.tar.bz2

      - name: Prepare user-config.jam for Android (bionic, arm64-v8a)
        run: |
          ANDROID_API=21
          NDK_HOME="$HOME/android-ndk"
          TOOLCHAIN="$NDK_HOME/toolchains/llvm/prebuilt/linux-x86_64/bin"
          echo "using clang : android : $TOOLCHAIN/clang++ --target=aarch64-linux-android$ANDROID_API --sysroot=$NDK_HOME/toolchains/llvm/prebuilt/linux-x86_64/sysroot ;" > $HOME/user-config.jam

      - name: Bootstrap Boost.Build
        working-directory: ./boost_1_83_0
        run: |
          ./bootstrap.sh --with-toolset=clang

      - name: Build Boost for Android arm64-v8a (bionic)
        working-directory: ./boost_1_83_0
        env:
          ANDROID_API: 21
          NDK_HOME: ${{ env.ANDROID_NDK_HOME }}
        run: |
          TOOLCHAIN="$NDK_HOME/toolchains/llvm/prebuilt/linux-x86_64/bin"
          SYSROOT="$NDK_HOME/toolchains/llvm/prebuilt/linux-x86_64/sysroot"
          ./b2 toolset=clang-android \
            cxxflags="--target=aarch64-linux-android$ANDROID_API --sysroot=$SYSROOT -fPIC -std=c++17 -fvisibility=hidden" \
            linkflags="--target=aarch64-linux-android$ANDROID_API --sysroot=$SYSROOT -fPIC -pie -Wl,--no-undefined" \
            target-os=android \
            address-model=64 \
            architecture=arm \
            abi=aapcs \
            binary-format=elf \
            threading=multi \
            threadapi=pthread \
            variant=release \
            link=static,shared \
            runtime-link=shared \
            --prefix=../boost_android_arm64_install \
            --build-dir=../boost_android_arm64_build \
            --layout=system \
            --user-config=$HOME/user-config.jam \
            --with-filesystem \
            --with-log \
            --with-program_options \
            --with-serialization \
            --with-system \
            --with-thread \
            -d+2 install -j$(nproc)

      - name: Diagnostics check built Boost libs
        if: always()
        run: |
          echo "=== Built Boost libs for Android ==="
          find ../boost_android_arm64_install -type f || true
          file ../boost_android_arm64_install/lib/* || true

      - name: Package Boost artifacts
        if: success()
        run: |
          tar -czvf boost_android_arm64.tar.gz boost_android_arm64_install

      - name: Upload Boost artifact
        if: success()
        uses: actions/upload-artifact@v4
        with:
          name: boost_android_arm64
          path: boost_android_arm64.tar.gz
